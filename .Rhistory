days=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
days
paste(days, sep=' ', collapse='<')
name="John Andrew Thomas"
name
strsplit(name, split='')
strsplit(name, split=' ')
name
name
name
generate_email=strsplit(name, split=' ')
generate_email
generate_email=paste(generate_email, collapse = '@gmail.com;')
generate_email
name
name1=strsplit(name, split=' ')
name1
generate_email=paste(name1, collapse='@gmail.com;')
generate_email
generate_email=paste(name1, c('@gmail.com'), sep=';')
generate_email
class(species)
iris$Species
name
generate_email
name1
name2=paste0(name1, '@gmail.com')
name2
name
name1
name2
name1
name2=unlist(name1)
name2
paste(name2, c('@gmail.com'),sep=';')
paste(name2, c('gmail.com;'), sep = '@')
paste(name2, c('gmail.com'), sep = ';', collapse = '@')
paste(name2, c('gmail.com'), sep = '@', collapse = ';')
name
name1
name2
name
name1=strsplit(name, split=' ')
name1
name2=unlist(name1)
name2
generate_email
generate_email=paste(name2, c(gmail.com), sep = ';', collapse='@')
generate_email=paste(name2, c('gmail.com'), sep = ';', collapse='@')
generate_email
generate_email=paste(name2, c('gmail.com'), sep = '@', collapse=';')
generate_email
generate_email=paste(name1, c('gmail.com'), sep = '@', collapse=';')
generate_email
exer
gsub(exer, 'great', 'wonderful')
gsub('great', 'wonderful', exer)
data("iris")
iris
class(iris)
iris
range = quartile(iris$Petal.Length, c(0, .25, .75, 1))
range = quantile(iris$Petal.Length, c(0, .25, .75, 1.))
range
class(range)
labels()
labels=c('Long','Middle','Short')
labels
labels=c('Short','Middle','Long')
labels
iris$Category=cut(iris$Petal.Length, range, labels = labels)
iris
levels
levels
level
labels
iris
labels
relevel(labels, ref='Middle')
labels
relevel(labels, ref="Middle")
iris$Category=relevel(iris$Category, ref='Middle')
iris
labels
iris$Category=relevel(relevel(iris$Category, ref='Middle'), ref='Long')
iris
labels
n=5
if(num %% 2 != 0)
{ cat(n, 'is odd')}
n
if(n %% 2 != 0)
{cat(n, 'is odd')}
num =15
if(num %% =! 0){}
if(num %% =! 0){
if(num %% == )
}
num
if(num %% 2 != 0){}
if(num %% 2 != 0){
if(num %% 5 != 0){ cat(num, 'is divisible by 5')
}else
}
if(num %% 2 != 0){
if(num %% 5 != 0){ cat(num, 'is divisible by 5')
}else
}
num
if(num %% 2 != 0){
if(num %% 5 != 0){ cat(num, 'is odd & divisible by 5')
}else {
cat(num, 'is odd and not divisble by 5
} elseif (num == 0){
cat(num, 'is neither odd nor even')
}else
cat(num, 'is even')
}
if(num %% 2 != 0){
if(num %% 5 != 0){
cat(num, 'is odd & divisible by 5')
}else {
cat(num, 'is odd and not divisble by 5
}
}	elseif (num == 0){
cat(num, 'is neither odd nor even')
}else{
cat(num, 'is even')
}
days = c("Friday", "Sunday", "Monday", "Sunday", "Wednesday")
days
reorder(days, ref='Monday')
relevel(days, ref='Monday')
days
class(days)
day2=factor(days)
day2
days = c("Friday", "Sunday", "Monday", "Sunday", "Wednesday")
days
day1=factor(days)
day1
{
name="John Andrew Thomas"
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';') # fill in your code here
}
generate_email <- function(name) {
name="John Andrew Thomas"
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';') # fill in your code here
}
generate_email <- function(name) {
name="John Andrew Thomas"
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';') # fill in your code here
}
x=(y+1)
x=1
y=(x+1)
y
sum(x+1)
y=sum(x+1)
y
sin(0)
x
sin(1)+1
My_custom_function = function(y) {
Return (sin(y)+1)
}
y
My_custom_function = function(y) {
Return (sin(y)+1)
}
y
sin(2)
sin(y)
My_custom_function(9)
My_custom_function = function(y) {
return (sin(y)+1)
}
My_custom_function(9)
My_custom_function(90)
x
y
My_custom_function = function(y){
return (y-x)
}
My_custom_function = function(x,y){
return (y-x)
}
My_custom_function = function(z){
return (y-x)
}
My_custom_function = function(x){
return (y-x)
}
My_custom_function
My_custom_function = function(x,y){
return (y-x)
}
My_custom_function(9,6)
My_custom_function(10,6)
generate_email <- function(name) {
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';')
}
generate_email <- function(name) {
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';')
}
generate_emai("John Andrew Thomas")
sample(c("A", "B", "C", "D"), length=2, Replace=FALSE)
sample(c("A", "B", "C", "D"), length=2, Replace=TRUE)
sample(c("A", "B", "C", "D"), size=2, Replace=TRUE)
sample(c("A", "B", "C", "D"), size=10, Replace=TRUE)
sample(c("A", "B", "C", "D"), size=2, replace=TRUE)
sample(c("A", "B", "C", "D"), size=2, replace=FALSE)
sample1=function(f){
f(x)=2x+4
}
sample1=function(f)
{
f(x)=2x+4
}
sample1 = function(x)  {
f(x)=2x+4
}
f <- function(sample1)  {
f(x) <- 2x+4
}
f <- function(sample1)  {
f(x) <- 2x+4
return(f(x))
}
f <- function(sample1)  {
f <- (2*x)+4
return(f)
}
f(4)
f <- function(sample1)  {
f(x) <- (2*x)+4
return(f)
}
f(4)
f(x) = 2x+4
f <- function(x){
2x+4
}
g <- function(x) {
if (x < 0){
return("Negative number")
} if (x > 0) {
return ("Positive Number")
} else {
return ("You typed 0")
}
}
g <- function(x) {
if (x < 0){
return("Negative number")
} if (x > 0) {
return ("Positive Number")
} else {
return ("You typed 0")
}
}
g <- function(x) {
if (x < 0) {
return("Negative number")
} if (x > 0) {
return ("Positive Number")
} else {
return ("You typed 0")
}
}
g <- function(x) {
if (x < 0) {
return("Negative number")
} if (x > 0) {
return ("Positive Number")
} else {
return ("You typed 0")
}
}
g <- function(x) {
if (x < 0) {
return("Negative number")
} else if (x > 0) {
return ("Positive Number")
} else {
return ("You typed 0")
}
}
g(4)
g(4)
g(0)
g(-9)
f <- function(x){
x = 2x+4
}
Num_Convert=c(1,2,3,4)
choice = 'First'
switch(choice, First=Num_Convert[Num_Convert=1],
Second=Num_Convert[Num_Convert=2],
Third=Num_Convert[Num_Convert=3],
Forth=Num_Convert[Num_Convert4],
Null=Num_Convert[Num_Convert>4])
1
fun <- function(Num_Convert) {
switch(choice,
First={Num_Convert=1
},
Second={Num_Convert=2
},
Third={Num_Convert=3
},
Forth={Num_Convert4
},
Null=Num_Convert>4)
}
fun(1)
fun(2)
fun(3)
fun(4)
fun(5)
fun(10)
fun(1)
g(4)
g(0)
g(-9)
generate_email <- function(name) {
name="John Andrew Thomas"
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';')
}
generate_email <- function(name) {
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';')
}
name="John Andrew Thomas"
generate_email <- function(name) {
name1=strsplit(name, split=' ')
name2=unlist(name1)
generate_email=paste(name2, c('gmail.com'), sep='@', collapse=';')
}
generate_email("John Andrew Thomas")
source('C:/Users/rajes/Desktop/NYDS/Data Analysis & Visualization with R/R Folder/Test.R')
getwd()
source('C:/Users/rajes/Desktop/NYDS/Data Analysis & Visualization with R/ggplot2/ggplot.R')
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
?mpg
?iris
head(mpg)
mpg
view(mpg)
View(mpg)
g <- ggplot(data = mpg, aes(x = displ, y = hwy))
g
g + geom_point()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point(x = year, y = city)
g + geom_point(aes(x = year, y = city))
g + geom_point(aes(x = year, y = city))
g + geom_point(aes(x = year, y = cty))
g + geom_point() + geom_smooth(method = "lm")
View(mpg)
View(cars)
data(cars)
p_scatterplot = ggplot(data = cars, aes(x = speed, y = dist))
p_scatterplot + geom_point()
p_scatterplot = ggplot(data = cars, aes(y = dist, x = speed))
p_scatterplot + geom_point()
p_scatterplot = ggplot(data = cars, aes(x = speed, y = dist))
p_scatterplot + geom_point()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point(aes(color = class))
g + geom_point(aes(shape = class))
g + geom_point(aes(size = class))
g + geom_point(aes(alpha == class))
g + geom_point(aes(alpha = class))
g + geom_point()
g + geom_point() + facet_grid(. ~ cyl)
g + geom_point() + facet_grid(drv ~ .)
g + geom_point() + facet_grid(drv ~ cyl)
g + geom_point() + facet_wrap(drv ~ cyl)
g + geom_point() + facet_wrap( ~ class)
?reorder
p_scatterplot = ggplot(data = cars, aes(x = dist, y = speed))
p_scatterplot = ggplot(data = cars, aes(x = speed, y = dist))
p_scatterplot + geom_point()
p_scatterplot
ggplot(data = cars, aes(x = speed, y = dist)) + geom_point() + labs(x = "Speed (mph)", y = "Stopping Distance (ft))
exit
p
""
:q
""
p = ggplot(data = cars, aes(x = speed, y = dist))
+ geom_point()
+ labs(x = "Speed (mph)", y = "Stopping Distance (ft)")
p = ggplot(data = cars, aes(x = speed, y = dist)) +
geom_point() +
labs(x = "Speed (mph)", y = "Stopping Distance (ft)")
p
p = ggplot(data = cars, aes(x = speed, y = dist)) +
geom_point() +
labs(x = "Speed (mph)", y = "Stopping Distance (ft)")
p = ggplot(data = cars, aes(x = speed, y = dist)) +
geom_point() +
labs(x = "Speed (mph)", y = "Stopping Distance (ft)") +
labs(title = "Scatterplot of Speed/Distance")
p
p = ggplot(data = cars, aes(x = dist, y =speed) +
geom_point(shape = 17, fill = "red")
p
p = ggplot(data = cars, aes(x = dist, y =speed) +
geom_point(col="red", pch=17)
""
p = ggplot(data = cars, aes(x = dist, y =speed) +
geom_point(col="red", pch=17))
p = ggplot(data = cars, aes(x = dist, y =speed)) +
geom_point(col="red", pch=17)
p
p = ggplot(data = cars, aes(x = dist, y =speed)) +
geom_point(col="red", pch=17)
g + geom_point(aes(color = class))
p = ggplot(data = cars, aes(x = dist, y =speed)) +
geom_point(col="red", pch=17)
p
g + geom_point(aes(color = class))
getwd()
load("C:/Users/rajes/Desktop/NYDS/Data Analysis & Visualization with R/R Folder/.RData")
load("C:/Users/rajes/Desktop/NYDS/Data Analysis & Visualization with R/R Folder/.RData")
load("C:/Users/rajes/Desktop/NYDS/Data Analysis & Visualization with R/Shiny/My_App/.RData")
print("Hello World!")
source('~/.active-rstudio-document')
debugSource('C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Class.R')
a = 1
print("Hello World!")
source('C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Class.R')
source('C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Class.R')
mysum = function(a,b){return(a+b)}
mysum(1,2)
source('C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Class.R')
install.packages("ggplot2")
setwd("~/Desktop/anythingFolder")
getwd()
texas = read.csv("texas.csv")
texas = read.csv("texas.csv")
texas = read.csv('texas.csv')
texas = read.csv('C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Data Visualization with ggplot2/texas.csv')
g = ggplot(data = texas, aes(x = long, y = lat))
library(ggplot2)
g = ggplot(data = texas, aes(x = long, y = lat))
g + geom_polygon(aes(group = group))
g + geom_polygon(aes(group = group), fill = group)
g + geom_polygon(aes(group = group, fill = group))
tx <- g + geom_polygon(aes(group = group, fill = bin))
tx + ggtitle("Population of Texas Counties")
tx + scale_fill_brewer(palette = "Spectral")
install.packages("ggthemes")
p
p <- ggplot(data = diamonds, aes(x = color)) +
geom_bar(aes(fill = cut))
p
p + theme_economist()
p
p + theme_economist() + scale_fill_economist()
p
tx
tx2 = tx + ggtitle("Population of Texas")
tx
tx2 = tx + ggtitle("Population of Texas")
install.packages('addinslist')
library(addinslist)
addinslist:::addinslistAddin()
addinslist:::addinslistAddin()
shiny::runApp('C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Shiny_Proj/heart_health')
setwd("C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Shiny_Proj/")
runApp('heart_health')
setwd("C:/Users/rajes/Desktop/NYDS/NYDS-2/RDA/Shiny_Proj/")
getwd()
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('C:/Users/rajes/Desktop/NYDS/Data Analysis & Visualization with R/Shiny/Happy Countries')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('C:/Users/rajes/Desktop/NYDS/Data Analysis & Visualization with R/Shiny/Happy Countries')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
runApp('heart_health')
